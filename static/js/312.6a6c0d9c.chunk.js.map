{"version":3,"file":"static/js/312.6a6c0d9c.chunk.js","mappings":"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","sources":["Styled/MoviesList.js","components/MoviesList.jsx","components/PageButtons.jsx","Styled/SearchBox.js","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport filmTape from 'images/film-tape.png';\nimport defaultPoster from 'images/default_poster.jpg';\nimport propTypes from 'prop-types';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 30px;\n\n  @media screen and (max-width: 768px) {\n    padding: 0 8px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const Item = styled.li`\n  padding: 5px 12px;\n  border-bottom: 1px solid transparent;\n  position: relative;\n\n  &::before {\n    content: '';\n    background-image: url(${filmTape});\n    background-size: cover;\n    position: absolute;\n    width: 25px;\n    height: 25px;\n    left: -25px;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const LinkToDetails = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  margin: 1px;\n\n  &:hover,\n  &:focus {\n    color: #ff3cac;\n  }\n\n  @media screen and (min-width: 768px) {\n    &:hover::after,\n    &:focus::after {\n      content: '';\n      background-image: ${props =>\n        props.cover\n          ? `url('https://image.tmdb.org/t/p/w500/${props.cover}')`\n          : `url(${defaultPoster})`};\n\n      background-size: cover;\n      width: 160px;\n      height: 240px;\n      display: block;\n      border-radius: 4px;\n      border: 1px solid rgba(43, 134, 197);\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: absolute;\n      top: -140px;\n      left: 400px;\n      z-index: 1;\n    }\n  }\n`;\n\nItem.propTypes = {\n  filmTape: propTypes.string,\n};\n\nLinkToDetails.propTypes = {\n  cover: propTypes.string,\n  defaultPoster: propTypes.string,\n};\n","import { useLocation } from 'react-router-dom';\nimport { Wrapper, List, Item, LinkToDetails } from '../Styled/MoviesList';\nimport propTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <LinkToDetails\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              cover={movie.poster_path}\n            >\n              {movie.title}\n            </LinkToDetails>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      title: propTypes.string.isRequired,\n      poster_path: propTypes.string,\n    })\n  ),\n};\n","import { Button } from './Button';\nimport propTypes from 'prop-types';\n\nexport const PageButtons = ({ page, totalPages, onPrevPage, onNextPage }) => {\n  if (totalPages === 1) {\n    return null;\n  }\n\n  const prevDisabled = page === 1 ? true : false;\n  const nextDisabled = page === totalPages ? true : false;\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'flex-start',\n      }}\n    >\n      <Button\n        disabled={prevDisabled}\n        label=\"Prev page\"\n        icon=\"left_arrow\"\n        onClick={() => onPrevPage()}\n      />\n      <Button\n        disabled={nextDisabled}\n        label=\"Next page\"\n        icon=\"right_arrow\"\n        reverse=\"true\"\n        onClick={() => onNextPage()}\n      />\n    </div>\n  );\n};\n\nPageButtons.propTypes = {\n  page: propTypes.number,\n  totalPages: propTypes.number,\n  onPrevPage: propTypes.func,\n  onNextPage: propTypes.func,\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n  padding: 0 16px;\n  flex-wrap: wrap;\n\n  input {\n    padding: 8px 32px 8px 8px;\n    width: 250px;\n    border-image: linear-gradient(\n      225deg,\n      rgba(255, 60, 172) 0%,\n      rgba(120, 75, 160) 50%,\n      rgba(43, 134, 197) 100%\n    );\n    border-image-slice: 1;\n    border-width: 2px;\n    border-style: solid;\n    font: inherit;\n    outline: none;\n    opacity: 0.7;\n    transition: opacity 250ms ease-in-out;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    &:focus {\n      opacity: 1;\n      background-image: linear-gradient(\n        90deg,\n        rgba(43, 134, 197, 0.15) 0%,\n        rgba(120, 75, 160, 0.15) 50%,\n        rgba(255, 60, 172, 0.15) 100%\n      );\n    }\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n    gap: 0.5rem;\n\n    input {\n      width: 100%;\n      font-size: 0.8rem;\n    }\n  }\n`;\n\nexport const Header = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 500;\n  margin: 1rem 0;\n  display: inline-block;\n\n  @media (max-width: 768px) {\n    font-size: 1.2rem;\n    width: 100%;\n    text-align: center;\n  }\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 25px;\n  height: 25px;\n  position: relative;\n  right: 56px;\n  z-index: 1;\n  opacity: 0.7;\n\n  @media (max-width: 768px) {\n    top: -40px;\n    left: calc(50% - 20px);\n  }\n`;\n","import { DebounceInput } from 'react-debounce-input';\nimport { Wrapper, Header, Icon } from '../Styled/SearchBox';\nimport propTypes from 'prop-types';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Header>Search movies:</Header>\n      <DebounceInput\n        type=\"text\"\n        debounceTimeout={500}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"type here\"\n      />\n      <Icon />\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  value: propTypes.string,\n  onChange: propTypes.func,\n};\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\nimport { Wrapper } from 'Styled/GlobalStyles';\nimport { SearchBox } from 'components/SearchBox';\nimport { MoviesList } from 'components/MoviesList';\nimport { PageButtons } from 'components/PageButtons';\nimport { useRequest } from '../services/useRequest';\nimport propTypes from 'prop-types';\n\nconst Movies = () => {\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const { data, error } = useRequest(\n    '/search/movie',\n    page,\n    movieName || { query: '' }\n  );\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Wrapper>\n      <SkeletonTheme baseColor=\"#dddddd\" highlightColor=\"#a5a5a5\">\n        <SearchBox value={movieName} onChange={updateQueryString} />\n        {error && <h2>failed to load</h2>}\n        {!data && searchParams !== '' ? (\n          <Skeleton\n            count={15}\n            style={{ height: 30, width: 300, marginTop: 15 }}\n          />\n        ) : data?.total_results === 0 && movieName && !error ? (\n          <h2>No results found</h2>\n        ) : (\n          <>\n            <MoviesList movies={data.results} />\n            {data.total_pages > 1 && (\n              <PageButtons\n                page={page}\n                totalPages={data.total_pages}\n                onPrevPage={() => setPage(page - 1)}\n                onNextPage={() => setPage(page + 1)}\n              />\n            )}\n          </>\n        )}\n      </SkeletonTheme>\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  page: propTypes.number,\n  setPage: propTypes.func,\n  data: propTypes.object,\n  error: propTypes.object,\n  movieName: propTypes.string,\n  updateQueryString: propTypes.func,\n};\n"],"names":["Wrapper","styled","List","Item","filmTape","LinkToDetails","Link","props","cover","defaultPoster","propTypes","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","poster_path","title","PageButtons","page","totalPages","onPrevPage","onNextPage","prevDisabled","nextDisabled","style","display","justifyContent","disabled","label","icon","onClick","reverse","Header","Icon","HiSearch","SearchBox","value","onChange","DebounceInput","type","debounceTimeout","e","target","placeholder","useState","setPage","useSearchParams","searchParams","setSearchParams","movieName","get","useRequest","query","data","error","baseColor","highlightColor","total_results","results","total_pages","count","height","width","marginTop"],"sourceRoot":""}