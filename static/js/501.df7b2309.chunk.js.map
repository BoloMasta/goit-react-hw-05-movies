{"version":3,"file":"static/js/501.df7b2309.chunk.js","mappings":"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","sources":["Styled/Cast.jsx","components/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  margin: 20px 0;\n  width: 100%;\n  max-width: 1200px;\n  height: 100%;\n  max-height: 500px;\n  overflow-y: scroll;\n  transition: all 0.2s ease-in-out;\n  padding: 10px;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\n  }\n\n  ::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    background-color: #f5f5f5;\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar {\n    width: 10px;\n    background-color: #f5f5f5;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background-image: linear-gradient(\n      225deg,\n      #2b86c5 0%,\n      #784ba0 50%,\n      #ff3cac 100%\n    );\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  height: 200px;\n  gap: 10px;\n  width: 100%;\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255) 0%,\n      rgba(255, 60, 172, 0.5) 15%,\n      rgba(120, 75, 160, 0.5) 35%,\n      rgba(43, 134, 197, 0.5) 45%,\n      rgba(255, 255, 255) 90%\n    );\n  }\n`;\n\nexport const Image = styled.img`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  border-radius: 5px;\n`;\n\nexport const Name = styled.p`\n  font-size: 1.2rem;\n  font-weight: 700;\n  color: #000;\n  margin: 10px 0;\n  width: 25%;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Character = styled.p`\n  font-size: 1rem;\n  font-weight: 400;\n  color: #000;\n  margin: 10px 0;\n  max-width: 50%;\n  display: flex;\n  align-items: center;\n`;\n","import { useState, useEffect, useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport { Wrapper, List, Item, Image, Name, Character } from '../Styled/Cast';\nimport api from 'services/api';\n\nconst castReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CAST':\n      return action.payload;\n    case 'SET_LOADED':\n      return state.map(castMember =>\n        castMember.id === action.payload\n          ? { ...castMember, loaded: true }\n          : castMember\n      );\n    default:\n      return state;\n  }\n};\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, dispatch] = useReducer(castReducer, []);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getCast = async () => {\n      try {\n        const { cast } = await api.fetchMovieCast(movieId);\n        const castWithLoadedProp = cast.map(castMember => ({\n          ...castMember,\n          loaded: false,\n        }));\n        dispatch({ type: 'SET_CAST', payload: castWithLoadedProp });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  const handleCastImageLoaded = e => {\n    const castMemberId = Number(e.target.dataset.id);\n    dispatch({ type: 'SET_LOADED', payload: castMemberId });\n  };\n\n  return (\n    <>\n      {error && <h2>Something went wrong. Try again later.</h2>}\n      {isLoading && (\n        <Wrapper>\n          <List>\n            <Item>\n              <Skeleton width={150} height={200} inline={true} />\n              <Name>\n                <Skeleton width={200} height={50} inline={true} />\n              </Name>\n              <Character>\n                <Skeleton width={400} height={50} inline={true} />\n              </Character>\n            </Item>\n          </List>\n        </Wrapper>\n      )}\n\n      {!isLoading && !error && (\n        <>\n          {cast.length === 0 && !isLoading ? (\n            <h2>We don't have any cast for this movie.</h2>\n          ) : (\n            <Wrapper>\n              <List>\n                {cast.map(({ id, profile_path, name, character, loaded }) => (\n                  <Item key={id}>\n                    {!loaded && <Skeleton width={150} height={195} />}\n                    <Image\n                      src={\n                        profile_path\n                          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                          : 'https://dummyimage.com/200x300/2a2a2a/ffffff&text=No+image'\n                      }\n                      alt={name}\n                      data-id={id}\n                      onLoad={handleCastImageLoaded}\n                      height={loaded ? 200 : 0}\n                      width={loaded ? 150 : 0}\n                    />\n                    <Name>{name}</Name>\n                    <Character>Character: {character}</Character>\n                  </Item>\n                ))}\n              </List>\n              {cast.length === 0 && !isLoading && (\n                <h2>We don't have any cast for this movie.</h2>\n              )}\n            </Wrapper>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst apiKey = '92be59e0090ddfe5570b8756c403476a';\n// const apiKey = `${secrets.REACT_APP_API_KEY}`;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass FetchApiMovies {\n  async fetchTrendingMovies() {\n    try {\n      const { data } = await axios.get(`/trending/movie/day?api_key=${apiKey}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMoviesByQuery(query) {\n    try {\n      const { data } = await axios.get(\n        `/search/movie?api_key=${apiKey}&query=${query}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieDetails(movieId) {\n    try {\n      const { data } = await axios.get(`/movie/${movieId}?api_key=${apiKey}`);\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieCast(movieId) {\n    try {\n      const { data } = await axios.get(\n        `/movie/${movieId}/credits?api_key=${apiKey}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieReviews(movieId) {\n    try {\n      const { data } = await axios.get(\n        `/movie/${movieId}/reviews?api_key=${apiKey}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default new FetchApiMovies();\n"],"names":["Wrapper","styled","List","Item","Image","props","width","height","Name","Character","castReducer","state","action","type","payload","map","castMember","id","loaded","movieId","useParams","useReducer","cast","dispatch","useState","error","setError","isLoading","setIsLoading","useEffect","getCast","api","castWithLoadedProp","handleCastImageLoaded","e","castMemberId","Number","target","dataset","inline","length","profile_path","name","character","src","alt","onLoad","apiKey","axios","FetchApiMovies","data","console","log","query"],"sourceRoot":""}