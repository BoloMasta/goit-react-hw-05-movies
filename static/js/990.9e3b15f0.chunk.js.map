{"version":3,"file":"static/js/990.9e3b15f0.chunk.js","mappings":"4RAEaA,EAAUC,EAAAA,GAAAA,IAAH,mvBAsCPC,EAAOD,EAAAA,GAAAA,GAAH,yHAOJE,EAAOF,EAAAA,GAAAA,GAAH,8ZAuBJG,EAAQH,EAAAA,GAAAA,IAAH,2HAQLI,EAAOJ,EAAAA,GAAAA,EAAH,+JAUJK,EAAYL,EAAAA,GAAAA,EAAH,iK,mBC3BtB,EAtDa,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAO,mCAAG,+GAEWC,EAAAA,EAAAA,eAAmBX,GAF9B,gBAEJG,EAFI,EAEJA,KACRC,EAAQD,GAHI,gDAKZG,EAAS,EAAD,IALI,yBAOZE,GAAa,GAPD,4EAAH,qDAUbE,GACD,GAAE,CAACV,KAGF,gCACGO,IAAa,SAACK,EAAA,EAAD,IACbP,IAAS,mEACO,IAAhBF,EAAKU,QAAiBN,GAGrB,UAACd,EAAD,YACE,SAACE,EAAD,UACGQ,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACtB,EAAD,YACE,SAACC,EAAD,CACEsB,IACEH,EAAY,yCAC0BA,GAClC,6DAENI,IAAKH,KAEP,SAACnB,EAAD,UAAOmB,KACP,UAAClB,EAAD,yBAAuBmB,OAVdH,EADH,MAeK,IAAhBZ,EAAKU,SAAiBN,IACrB,uEApBJ,qEA0BP,C,sFCzDKc,EAAS,mCACfC,EAAAA,EAAAA,SAAAA,QAAyB,+BAAzB,IAEMC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAyCJ,OAzCIA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,sBAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MACJ,+GAE2BD,EAAAA,EAAAA,IAAA,sCAAyCD,IAFpE,uBAEYG,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,gCAKIC,QAAQC,IAAR,MALJ,2GADIH,IACJ,mEASA,WAAyBI,GAAzB,kGAE2BL,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACoBM,IAH/C,uBAEYH,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,4GATA,IASA,kEAWA,WAAwB1B,GAAxB,kGAE2BsB,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,oBAAuCqB,IAFlE,uBAEYG,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,gCAKIC,QAAQC,IAAR,MALJ,4GAXA,IAWA,+DASA,WAAqB1B,GAArB,kGAE2BsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,4BACgBqB,IAH3C,uBAEYG,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,4GATA,IASA,kEAWA,WAAwB1B,GAAxB,kGAE2BsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,4BACgBqB,IAH3C,uBAEYG,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,4GAXA,MAWA,EAzCIH,GAqDN,QAAmBA,C","sources":["Styled/Cast.js","components/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  margin: 20px 0;\n  width: 100%;\n  max-width: 1200px;\n  height: 100%;\n  max-height: 500px;\n  overflow-y: scroll;\n  transition: all 0.2s ease-in-out;\n  padding: 10px;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\n  }\n\n  ::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    background-color: #f5f5f5;\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar {\n    width: 10px;\n    background-color: #f5f5f5;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background-image: linear-gradient(\n      225deg,\n      #2b86c5 0%,\n      #784ba0 50%,\n      #ff3cac 100%\n    );\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  width: 100%;\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255) 0%,\n      rgba(255, 60, 172, 0.5) 15%,\n      rgba(120, 75, 160, 0.5) 35%,\n      rgba(43, 134, 197, 0.5) 45%,\n      rgba(255, 255, 255) 90%\n    );\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 150px;\n  height: 100%;\n  max-height: 200px;\n  border-radius: 5px;\n`;\n\nexport const Name = styled.p`\n  font-size: 1.2rem;\n  font-weight: 700;\n  color: #000;\n  margin: 10px 0;\n  width: 25%;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Character = styled.p`\n  font-size: 1rem;\n  font-weight: 400;\n  color: #000;\n  margin: 10px 0;\n  max-width: 50%;\n  display: flex;\n  align-items: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'components/Loader';\nimport { Wrapper, List, Item, Image, Name, Character } from '../Styled/Cast';\nimport api from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getCast = async () => {\n      try {\n        const { cast } = await api.fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <h2>Something went wrong. Try again later.</h2>}\n      {cast.length === 0 && !isLoading ? (\n        <h2>We don't have any cast for this movie.</h2>\n      ) : (\n        <Wrapper>\n          <List>\n            {cast.map(({ id, profile_path, name, character }) => (\n              <Item key={id}>\n                <Image\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : 'https://dummyimage.com/200x300/2a2a2a/ffffff&text=No+image'\n                  }\n                  alt={name}\n                />\n                <Name>{name}</Name>\n                <Character>Character: {character}</Character>\n              </Item>\n            ))}\n          </List>\n          {cast.length === 0 && !isLoading && (\n            <h2>We don't have any cast for this movie.</h2>\n          )}\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst apiKey = '92be59e0090ddfe5570b8756c403476a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass FetchApiMovies {\n  async fetchTrendingMovies() {\n    try {\n      const { data } = await axios.get(`/trending/movie/day?api_key=${apiKey}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMoviesByQuery(query) {\n    try {\n      const { data } = await axios.get(\n        `/search/movie?api_key=${apiKey}&query=${query}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieDetails(movieId) {\n    try {\n      const { data } = await axios.get(`/movie/${movieId}?api_key=${apiKey}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieCast(movieId) {\n    try {\n      const { data } = await axios.get(\n        `/movie/${movieId}/credits?api_key=${apiKey}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieReviews(movieId) {\n    try {\n      const { data } = await axios.get(\n        `/movie/${movieId}/reviews?api_key=${apiKey}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default new FetchApiMovies();\n"],"names":["Wrapper","styled","List","Item","Image","Name","Character","movieId","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","getCast","api","Loader","length","map","id","profile_path","name","character","src","alt","apiKey","axios","FetchApiMovies","data","console","log","query"],"sourceRoot":""}