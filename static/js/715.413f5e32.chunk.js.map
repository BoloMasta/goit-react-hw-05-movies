{"version":3,"file":"static/js/715.413f5e32.chunk.js","mappings":"oSAEaA,EAAUC,EAAAA,GAAAA,IAAH,g0BAwCPC,EAAOD,EAAAA,GAAAA,GAAH,yHAOJE,EAAOF,EAAAA,GAAAA,GAAH,kbAwBJG,EAASH,EAAAA,GAAAA,EAAH,gIAQNI,EAAUJ,EAAAA,GAAAA,EAAH,sF,mBCdpB,EA3DgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAU,mCAAG,+GAEWC,EAAAA,EAAAA,kBAAsBX,GAFjC,gBAEPY,EAFO,EAEPA,QACRR,EAAWQ,GAHI,gDAKfN,EAAS,EAAD,IALO,yBAOfE,GAAa,GAPE,4EAAH,qDAUhBE,GACD,GAAE,CAACV,KAGF,gCACGK,IAAS,mEACU,IAAnBF,EAAQU,SAAiBN,IACxB,sEAGDA,IACC,SAACb,EAAD,WACE,SAACE,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAAC,IAAD,CAAUgB,MAAO,SAEnB,SAACf,EAAD,WACE,SAAC,IAAD,CAAUe,MAAO,IAAKC,MAAO,cAOrCR,GAAaJ,EAAQU,OAAS,IAAMR,IACpC,SAACX,EAAD,WACE,SAACE,EAAD,UACGO,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACtB,EAAD,YACE,UAACC,EAAD,sBAAiBoB,MACjB,SAACnB,EAAD,UAAUoB,MAFDF,EADA,UAWxB,C,sFC/DKG,EAAS,mCAEfC,EAAAA,EAAAA,SAAAA,QAAyB,+BAAzB,IAEMC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CA0CJ,OA1CIA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,sBAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MACJ,+GAE2BD,EAAAA,EAAAA,IAAA,sCAAyCD,IAFpE,uBAEYG,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,gCAKIC,QAAQC,IAAR,MALJ,2GADIH,IACJ,mEASA,WAAyBI,GAAzB,kGAE2BL,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACoBM,IAH/C,uBAEYH,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,4GATA,IASA,kEAWA,WAAwBzB,GAAxB,kGAE2BqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,oBAAuCoB,IAFlE,uBAEYG,EAFZ,EAEYA,KACRC,QAAQC,IAAIF,GAHhB,kBAIWA,GAJX,gCAMIC,QAAQC,IAAR,MANJ,4GAXA,IAWA,+DAUA,WAAqBzB,GAArB,kGAE2BqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,4BACgBoB,IAH3C,uBAEYG,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,4GAVA,IAUA,kEAWA,WAAwBzB,GAAxB,kGAE2BqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,4BACgBoB,IAH3C,uBAEYG,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,4GAXA,MAWA,EA1CIH,GAsDN,QAAmBA,C","sources":["Styled/Reviews.jsx","components/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  margin: 20px 0;\n  width: 100%;\n  max-width: 1200px;\n  height: 100%;\n  max-height: 500px;\n  overflow-y: scroll;\n  transition: all 0.2s ease-in-out;\n  padding: 10px;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\n  }\n\n  ::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    background-color: #f5f5f5;\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar {\n    width: 10px;\n    background-color: #f5f5f5;\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background-image: linear-gradient(\n      225deg,\n      #2b86c5 0%,\n      #784ba0 50%,\n      #ff3cac 100%\n    );\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 100%;\n  margin-bottom: 15px;\n  padding: 5px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255) 0%,\n      rgba(255, 60, 172, 0.5) 15%,\n      rgba(120, 75, 160, 0.5) 35%,\n      rgba(43, 134, 197, 0.5) 45%,\n      rgba(255, 255, 255) 90%\n    );\n  }\n`;\n\nexport const Author = styled.p`\n  font-size: 1.4rem;\n  font-weight: 700;\n  text-align: left;\n  width: 100%;\n  white-space: nowrap;\n`;\n\nexport const Content = styled.p`\n  font-size: 1rem;\n  font-weight: 400;\n  text-align: left;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport { Wrapper, List, Item, Author, Content } from '../Styled/Reviews';\nimport api from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getReviews = async () => {\n      try {\n        const { results } = await api.fetchMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <h2>Something went wrong. Try again later.</h2>}\n      {reviews.length === 0 && !isLoading && (\n        <h2>We don't have any reviews for this movie.</h2>\n      )}\n\n      {isLoading && (\n        <Wrapper>\n          <List>\n            <Item>\n              <Author>\n                <Skeleton width={100} />\n              </Author>\n              <Content>\n                <Skeleton width={500} count={3} />\n              </Content>\n            </Item>\n          </List>\n        </Wrapper>\n      )}\n\n      {!isLoading && reviews.length > 0 && !error && (\n        <Wrapper>\n          <List>\n            {reviews.map(({ id, author, content }) => (\n              <Item key={id}>\n                <Author>Author: {author}</Author>\n                <Content>{content}</Content>\n              </Item>\n            ))}\n          </List>\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst apiKey = '92be59e0090ddfe5570b8756c403476a';\n// const apiKey = `${secrets.REACT_APP_API_KEY}`;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass FetchApiMovies {\n  async fetchTrendingMovies() {\n    try {\n      const { data } = await axios.get(`/trending/movie/day?api_key=${apiKey}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMoviesByQuery(query) {\n    try {\n      const { data } = await axios.get(\n        `/search/movie?api_key=${apiKey}&query=${query}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieDetails(movieId) {\n    try {\n      const { data } = await axios.get(`/movie/${movieId}?api_key=${apiKey}`);\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieCast(movieId) {\n    try {\n      const { data } = await axios.get(\n        `/movie/${movieId}/credits?api_key=${apiKey}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieReviews(movieId) {\n    try {\n      const { data } = await axios.get(\n        `/movie/${movieId}/reviews?api_key=${apiKey}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default new FetchApiMovies();\n"],"names":["Wrapper","styled","List","Item","Author","Content","movieId","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","getReviews","api","results","length","width","count","map","id","author","content","apiKey","axios","FetchApiMovies","data","console","log","query"],"sourceRoot":""}