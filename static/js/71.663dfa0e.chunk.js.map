{"version":3,"file":"static/js/71.663dfa0e.chunk.js","mappings":"yNAGaA,EAAUC,EAAAA,GAAAA,IAAH,qIASPC,EAAOD,EAAAA,GAAAA,GAAH,qEAIJE,EAAOF,EAAAA,GAAAA,GAAH,qXAiBJG,GAAgBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,uI,SC7BbK,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,WACE,SAACE,EAAD,UACGK,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,SAACC,EAAD,CACEQ,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GAFjB,SAIGG,EAAMK,SALAL,EAAME,GADF,OAaxB,C,oKCrBYb,EAAUC,EAAAA,GAAAA,IAAH,4CAIPgB,EAAShB,EAAAA,GAAAA,GAAH,8H,6BCwCnB,EAtCa,WACX,OAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAS,mCAAG,+GAEYC,EAAAA,EAAAA,sBAFZ,gBAENC,EAFM,EAENA,QACRR,EAAUQ,GAHI,gDAKdN,EAAS,EAAD,IALM,yBAOdE,GAAa,GAPC,4EAAH,qDAUfE,GACD,GAAE,KAGD,UAACzB,EAAD,YACE,SAACiB,EAAD,+BACCK,GACC,SAAC,IAAD,CACEM,MAAO,GACPC,MAAO,CAAEC,OAAQ,GAAIC,MAAO,IAAKC,UAAW,OAG9C,+BACE,SAAC1B,EAAA,EAAD,CAAYC,OAAQA,MAGvBa,IAAS,qEAGf,C,sFC1CKa,EAAS,mCAEfC,EAAAA,EAAAA,SAAAA,QAAyB,+BAAzB,IAEMC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAyCJ,OAzCIA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,sBAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MACJ,+GAE2BD,EAAAA,EAAAA,IAAA,sCAAyCD,IAFpE,uBAEYG,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,gCAKIC,QAAQC,IAAR,MALJ,2GADIH,IACJ,mEASA,WAAyBI,GAAzB,kGAE2BL,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACoBM,IAH/C,uBAEYH,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,4GATA,IASA,kEAWA,WAAwBE,GAAxB,kGAE2BN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAuCP,IAFlE,uBAEYG,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,gCAKIC,QAAQC,IAAR,MALJ,4GAXA,IAWA,+DASA,WAAqBE,GAArB,kGAE2BN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACgBP,IAH3C,uBAEYG,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,4GATA,IASA,kEAWA,WAAwBE,GAAxB,kGAE2BN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACgBP,IAH3C,uBAEYG,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,4GAXA,MAWA,EAzCIH,GAqDN,QAAmBA,C","sources":["Styled/MoviesList.js","components/MoviesList.jsx","Styled/Home.js","pages/Home.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 30px;\n\n  @media screen and (max-width: 768px) {\n    padding: 0 8px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: outside '🎞️';\n`;\n\nexport const Item = styled.li`\n  padding: 6px 12px;\n  background: linear-gradient(white, white) padding-box,\n    linear-gradient(\n        to right,\n        rgb(255, 255, 255) 0%,\n        darkblue 5%,\n        rgb(255, 255, 255) 30%\n      )\n      border-box;\n  border-bottom: 1px solid transparent;\n\n  @media screen and (max-width: 768px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const LinkToDetails = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  margin: 1px;\n\n  &:hover,\n  &:focus {\n    color: #ff3cac;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { Wrapper, List, Item, LinkToDetails } from '../Styled/MoviesList';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <LinkToDetails\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              {movie.title}\n            </LinkToDetails>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 0 16px;\n`;\n\nexport const Header = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 500;\n  margin: 1rem 0;\n  display: block;\n  flex-basis: 100%;\n`;\n","import { useState, useEffect } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport { Wrapper, Header } from '../Styled/Home';\nimport { MoviesList } from '../components/MoviesList';\nimport api from '../services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovies = async () => {\n      try {\n        const { results } = await api.fetchTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <Wrapper>\n      <Header>Trending movies:</Header>\n      {isLoading ? (\n        <Skeleton\n          count={15}\n          style={{ height: 30, width: 300, marginTop: 15 }}\n        />\n      ) : (\n        <>\n          <MoviesList movies={movies} />\n        </>\n      )}\n      {error && <h1>Something went wrong. Try again later.</h1>}\n    </Wrapper>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst apiKey = '92be59e0090ddfe5570b8756c403476a';\n// const apiKey = `${secrets.REACT_APP_API_KEY}`;\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass FetchApiMovies {\n  async fetchTrendingMovies() {\n    try {\n      const { data } = await axios.get(`/trending/movie/day?api_key=${apiKey}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMoviesByQuery(query) {\n    try {\n      const { data } = await axios.get(\n        `/search/movie?api_key=${apiKey}&query=${query}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieDetails(movieId) {\n    try {\n      const { data } = await axios.get(`/movie/${movieId}?api_key=${apiKey}`);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieCast(movieId) {\n    try {\n      const { data } = await axios.get(\n        `/movie/${movieId}/credits?api_key=${apiKey}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieReviews(movieId) {\n    try {\n      const { data } = await axios.get(\n        `/movie/${movieId}/reviews?api_key=${apiKey}`\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default new FetchApiMovies();\n"],"names":["Wrapper","styled","List","Item","LinkToDetails","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","Header","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","getMovies","api","results","count","style","height","width","marginTop","apiKey","axios","FetchApiMovies","data","console","log","query","movieId"],"sourceRoot":""}