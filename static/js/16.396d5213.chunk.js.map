{"version":3,"file":"static/js/16.396d5213.chunk.js","mappings":"mOAIaA,EAAUC,EAAAA,GAAAA,IAAH,qIASPC,EAAOD,EAAAA,GAAAA,GAAH,mEAKJE,EAAOF,EAAAA,GAAAA,GAAH,ikBAeWG,GAafC,GAAgBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,ke,SC3CbM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,WACE,SAACE,EAAD,UACGM,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,SAACE,EAAD,CACEQ,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GACfQ,MAAOL,EAAMM,YAHf,SAKGN,EAAMO,SANAP,EAAME,GADF,OAcxB,C,8ECrBYM,EAAc,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC1D,GAAmB,IAAfF,EACF,OAAO,KAGT,IAAMG,EAAwB,IAATJ,EACfK,EAAeL,IAASC,EAE9B,OACE,iBACEK,MAAO,CACLC,QAAS,OACTC,eAAgB,aAChBC,UAAW,IAJf,WAOE,SAAC,IAAD,CACEC,SAAUN,EACVO,MAAM,YACNC,KAAK,aACLC,QAAS,kBAAMX,GAAN,KAEX,SAAC,IAAD,CACEQ,SAAUL,EACVM,MAAM,YACNC,KAAK,cACLE,QAAQ,OACRD,QAAS,kBAAMV,GAAN,MAehB,C,uKCzCYxB,EAAUC,EAAAA,GAAAA,IAAH,iyBAwCPmC,EAASnC,EAAAA,GAAAA,GAAH,8HAQNoC,GAAOpC,EAAAA,EAAAA,IAAOqC,EAAAA,IAAPrC,CAAH,gH,SChDJsC,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACzC,EAAD,YACE,SAACoC,EAAD,6BACA,SAAC,EAAAM,cAAD,CACEC,KAAK,OACLC,gBAAiB,IACjBJ,MAAOA,EACPC,SAAU,SAAAI,GAAC,OAAIJ,EAASI,EAAEC,OAAON,MAAtB,EACXO,YAAY,eAEd,SAACV,EAAD,MAGL,E,8BCqCD,EA5Ce,WACb,OAAwBW,EAAAA,EAAAA,UAAS,GAAjC,eAAO3B,EAAP,KAAa4B,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,UAAY,GAC/C,GAAwBC,EAAAA,EAAAA,GACtB,gBACAlC,EACAgC,GAAa,CAAEG,MAAO,KAHhBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAWd,OACE,iCACE,SAACnB,EAAD,CAAWC,MAAOa,EAAWZ,SAPP,SAAAe,GAExBJ,EAD6B,KAAVI,GAAgB,CAAEA,MAAAA,GAEtC,IAKIE,IAAS,2CACRD,EAK0B,KAApB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAME,gBAAuBN,IAAcK,GAC7C,8CAEA,iCACE,SAACnD,EAAA,EAAD,CAAYC,OAAQiD,EAAKG,UAExBH,EAAKI,YAAc,IAClB,SAACzC,EAAA,EAAD,CACEC,KAAMA,EACNC,WAAYmC,EAAKI,YACjBtC,WAAY,kBAAM0B,EAAQ5B,EAAO,EAArB,EACZG,WAAY,kBAAMyB,EAAQ5B,EAAO,EAArB,QAflB,SAAC,IAAD,CACEyC,MAAO,GACPnC,MAAO,CAAEoC,OAAQ,GAAIC,MAAO,IAAKlC,UAAW,QAoBrD,C","sources":["Styled/MoviesList.js","components/MoviesList.jsx","components/PageButtons.jsx","Styled/SearchBox.js","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport filmTape from 'images/film-tape.png';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 30px;\n\n  @media screen and (max-width: 768px) {\n    padding: 0 8px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  font-size: 0.8rem;\n`;\n\nexport const Item = styled.li`\n  padding: 6px 12px;\n  background: linear-gradient(white, white) padding-box,\n    linear-gradient(\n        to right,\n        rgb(255, 255, 255) 0%,\n        darkblue 5%,\n        rgb(255, 255, 255) 30%\n      )\n      border-box;\n  border-bottom: 1px solid transparent;\n  position: relative;\n\n  &::before {\n    content: '';\n    background-image: url(${filmTape});\n    background-size: cover;\n    position: absolute;\n    width: 25px;\n    height: 25px;\n    left: -25px;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const LinkToDetails = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  margin: 1px;\n\n  &:hover,\n  &:focus {\n    color: #ff3cac;\n  }\n\n  &:hover::after,\n  &:focus::after {\n    content: '';\n    background-image: url('https://image.tmdb.org/t/p/w500$', {props => props.cover})\n     \n    width: 150px;\n    height: 200px;\n    background: #ff3cac;\n    display: block;\n    border-radius: 2px;\n    position: absolute;\n    top: -100px;\n    left: 350px;\n    z-index: 1;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Wrapper, List, Item, LinkToDetails } from '../Styled/MoviesList';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <LinkToDetails\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              cover={movie.poster_path}\n            >\n              {movie.title}\n            </LinkToDetails>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n","import { Button } from './Button';\n\nexport const PageButtons = ({ page, totalPages, onPrevPage, onNextPage }) => {\n  if (totalPages === 1) {\n    return null;\n  }\n\n  const prevDisabled = page === 1 ? true : false;\n  const nextDisabled = page === totalPages ? true : false;\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginTop: 15,\n      }}\n    >\n      <Button\n        disabled={prevDisabled}\n        label=\"Prev page\"\n        icon=\"left_arrow\"\n        onClick={() => onPrevPage()}\n      />\n      <Button\n        disabled={nextDisabled}\n        label=\"Next page\"\n        icon=\"right_arrow\"\n        reverse=\"true\"\n        onClick={() => onNextPage()}\n      />\n\n      {/* <Button disabled={page === 1} onClick={() => onPrevPage()} type=\"button\">\n        Prev\n      </Button>\n      <Button\n        disabled={page === totalPages}\n        onClick={() => onNextPage()}\n        type=\"button\"\n      >\n        Next\n      </Button> */}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n  margin-bottom: 16px;\n  flex-wrap: wrap;\n\n  input {\n    padding: 8px 32px 8px 8px;\n    width: 250px;\n    border-image: linear-gradient(\n      225deg,\n      rgba(255, 60, 172) 0%,\n      rgba(120, 75, 160) 50%,\n      rgba(43, 134, 197) 100%\n    );\n    border-image-slice: 1;\n    border-width: 2px;\n    border-style: solid;\n    font: inherit;\n    outline: none;\n    opacity: 0.7;\n    transition: opacity 250ms ease-in-out;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    &:focus {\n      opacity: 1;\n      background-image: linear-gradient(\n        90deg,\n        rgba(43, 134, 197, 0.15) 0%,\n        rgba(120, 75, 160, 0.15) 50%,\n        rgba(255, 60, 172, 0.15) 100%\n      );\n    }\n  }\n`;\n\nexport const Header = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 500;\n  margin: 1rem 0;\n  display: block;\n  flex-basis: 100%;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 25px;\n  height: 25px;\n  margin-left: -32px;\n  z-index: 1;\n  opacity: 0.8;\n`;\n","import { DebounceInput } from 'react-debounce-input';\nimport { Wrapper, Header, Icon } from '../Styled/SearchBox';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Header>Search movies</Header>\n      <DebounceInput\n        type=\"text\"\n        debounceTimeout={500}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"type here\"\n      />\n      <Icon />\n    </Wrapper>\n  );\n};\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport { SearchBox } from 'components/SearchBox';\nimport { MoviesList } from 'components/MoviesList';\nimport { PageButtons } from 'components/PageButtons';\nimport { useRequest } from '../services/useRequest';\n\nconst Movies = () => {\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const { data, error } = useRequest(\n    '/search/movie',\n    page,\n    movieName || { query: '' }\n  );\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <SearchBox value={movieName} onChange={updateQueryString} />\n      {error && <h2>failed to load</h2>}\n      {!data ? (\n        <Skeleton\n          count={15}\n          style={{ height: 30, width: 300, marginTop: 15 }}\n        />\n      ) : data?.total_results === 0 && movieName && !error ? (\n        <h2>No results found</h2>\n      ) : (\n        <>\n          <MoviesList movies={data.results} />\n\n          {data.total_pages > 1 && (\n            <PageButtons\n              page={page}\n              totalPages={data.total_pages}\n              onPrevPage={() => setPage(page - 1)}\n              onNextPage={() => setPage(page + 1)}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Wrapper","styled","List","Item","filmTape","LinkToDetails","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","cover","poster_path","title","PageButtons","page","totalPages","onPrevPage","onNextPage","prevDisabled","nextDisabled","style","display","justifyContent","marginTop","disabled","label","icon","onClick","reverse","Header","Icon","HiSearch","SearchBox","value","onChange","DebounceInput","type","debounceTimeout","e","target","placeholder","useState","setPage","useSearchParams","searchParams","setSearchParams","movieName","get","useRequest","query","data","error","total_results","results","total_pages","count","height","width"],"sourceRoot":""}